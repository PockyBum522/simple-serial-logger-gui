<Window x:Class="SimpleSerialLoggerGui.UI.WindowResources.SettingsWindow.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:settingsWindow="clr-namespace:SimpleSerialLoggerGui.UI.WindowResources.SettingsWindow"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
        mc:Ignorable="d"
        Title="SettingsWindow" Height="450" Width="800"
        d:DataContext="{d:DesignInstance Type=settingsWindow:SettingsViewModel, IsDesignTimeCreatable=True}"
        Background="#222222">
    <Grid>
        
        <Grid.Resources>
            <!-- Design time dark backgrounds  -->
            <Style TargetType="{x:Type ScrollViewer}">
                <Style.Triggers>
                    <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                        <Setter Property="Background" Value="#333333" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="{x:Type CheckBox}">
                <Style.Triggers>
                    <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </Trigger>
                </Style.Triggers>

                <!-- I have no idea why this has to be done. It should already be set in CheckBoxStyles.xaml in Themes folder -->
                <Setter Property="Background" Value="#555555" />
            </Style>
            
            <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="10" />
            <RowDefinition Height="40" />
            <RowDefinition Height="80" />
            <RowDefinition MinHeight="190" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="10" />
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>
        
        <!-- Section: Device Class GUID -->
        <DockPanel Grid.Row="1" Grid.Column="1">
            
            <TextBlock Text="Device Class GUID:" DockPanel.Dock="Top" />
            
            <DockPanel MaxHeight="30">
                
                <TextBox Text="{ Binding DeviceClassGuid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" 
                         DockPanel.Dock="Left" />
                
            </DockPanel>
            
        </DockPanel>
        
        <DockPanel Grid.Row="3" Grid.Column="1" Margin="0,20,0,0">
            
            <TextBlock DockPanel.Dock="Bottom">
                Lorem ipsum dolor sit amet: <LineBreak/>
                Go into Device manager.<LineBreak/> 
                Right click the audio device you want to automatically disable/re-enable. <LineBreak/>
                Click Properties.
            </TextBlock>
        </DockPanel>
        
        <!-- Section: Save and Cancel Buttons -->
        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" Height="30" HorizontalAlignment="Center">
            <Button Content="Save Settings" 
                    Width="110" 
                    Padding="6" 
                    Command="{ Binding SaveSettingsCommand }"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            
            <Button Content="Cancel" 
                    Width="110" 
                    Padding="6" 
                    Margin="10,0,0,0"  
                    Command="{ Binding CancelCommand }" 
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            
        </StackPanel>
        
    </Grid>
</Window>
